** New repo **
git init


** Add/clone new repo **
git clone /path/to/repository
* or *
git clone benutzername@host:/path/to/repository


** add & commit **
Add changes to staging area
git add <dateiname>
* or *
git add .
* then put to git HEAD *
git commit -m "Commit-Message"


** Upload Changes **
git push origin branch_name


** Connect your new local repo with existing online-repo **
git init
git remote add origin <server>


** Discharge local changes and pull and overwrite things from git **
git checkout filename.xyz
git pull

** Discharge local branch and reset to remote head **
git fetch origin
git reset --hard origin/master

** Switch off gpg signing: **
git config --global commit.gpgsign false


** Change username and EMail **
git config user.name ""
git config user.email "@"


** Add new branch **
git checkout -b name_of_new_branch
git push origin name_of_new_branch

## Clone specific branch only
git clone --single-branch --branch <branchname> <remote-repo>


** New tag **

# add commit push  new stuff (development)

# delete local tag
git tag -d v0.0.6

# push deleted tag
git push -d origin v0.0.6

# new local tag 
git tag -a v0.0.6 -m "release v0.0.6"

# push local tag
git push origin v0.0.6

# checkout all branches and merge and push
git checkout master
git merge development
git push

git checkout latest
git merge master
git push origin latest


# Archive branch
git tag archive/<branchname> <branchname>
git branch -d <branchname>
git checkout master

## Get current repo url:
git remote get-url --all origin

# New repo-url:
git remote set-url origin https://git.company.com/path/to/your-project.git

# Sync local tags with remote:
git tag
git fetch --prune-tags
git tag